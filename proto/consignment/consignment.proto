syntax = "proto3";

package consignment;

    message Request {
      string body = 1; //тип имя = номер поля
      int32 age = 2; //тип целый 32  go  -> int32
      int64 salary = 3; //тип целый 64  go -> int64
    }

    message Response{
      double my_double = 1; // go -> float64
      float my_float = 2; // go ->float32

      uint32 my_uint32 = 3; // go -> uint32
      uint64 my_uint64 = 4; // go -> uint64

      fixed32  my_fixed32 = 5; // go -> uint32

      bool my_bool = 6;

      string my_string = 7;

      bytes my_bytes = 8; //go -> []byte

      enum Things {
        FIRST = 0;
        SECOND = 1;
        THIRD = 2;
        FOURTH = 4;
      }
      Things things = 9;

      Request req = 10;

      repeated Request snippet = 11;   // go-> []Request

    }

    message TimeDate{
      int32 year = 1;
      int32 month = 2;
      int32 day = 3;
      int32 hour = 4;
    }

    message OuterSearcher{
      message InnerSearcher{
        int32 code = 1;
        string url = 2;
      }
      repeated InnerSearcher result = 1;
    }

    message AnotherSearcher {
      OuterSearcher.InnerSearcher result = 1;
    }

    //сервис
service TestService{
      rpc HttpGET(Request) returns (Response) {}//можно передать в качестве аргумента что-то, можно ничего
      rpc HttpPOST(Request) returns(Response) {}
      rpc CurrentTime(TimeDate) returns(TimeDate) {}
}